/*
Copyright 2020 Twitter, Inc.
SPDX-License-Identifier: Apache-2.0

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
https://openapi-generator.tech
Do not edit the class manually.
*/


package com.twitter.clientlib.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.twitter.clientlib.JSON;

/**
 * Get2ListsIdFollowersResponseMeta
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Get2ListsIdFollowersResponseMeta {
  public static final String SERIALIZED_NAME_NEXT_TOKEN = "next_token";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_PREVIOUS_TOKEN = "previous_token";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_TOKEN)
  private String previousToken;

  public static final String SERIALIZED_NAME_RESULT_COUNT = "result_count";
  @SerializedName(SERIALIZED_NAME_RESULT_COUNT)
  private Integer resultCount;

  public Get2ListsIdFollowersResponseMeta() { 
  }

  public Get2ListsIdFollowersResponseMeta nextToken(String nextToken) {
    
    this.nextToken = nextToken;
    return this;
  }

   /**
   * The next token.
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The next token.")

  public String getNextToken() {
    return nextToken;
  }


  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public Get2ListsIdFollowersResponseMeta previousToken(String previousToken) {
    
    this.previousToken = previousToken;
    return this;
  }

   /**
   * The previous token.
   * @return previousToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The previous token.")

  public String getPreviousToken() {
    return previousToken;
  }


  public void setPreviousToken(String previousToken) {
    this.previousToken = previousToken;
  }


  public Get2ListsIdFollowersResponseMeta resultCount(Integer resultCount) {
    
    this.resultCount = resultCount;
    return this;
  }

   /**
   * The number of results returned in this response.
   * @return resultCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of results returned in this response.")

  public Integer getResultCount() {
    return resultCount;
  }


  public void setResultCount(Integer resultCount) {
    this.resultCount = resultCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Get2ListsIdFollowersResponseMeta get2ListsIdFollowersResponseMeta = (Get2ListsIdFollowersResponseMeta) o;
    return Objects.equals(this.nextToken, get2ListsIdFollowersResponseMeta.nextToken) &&
        Objects.equals(this.previousToken, get2ListsIdFollowersResponseMeta.previousToken) &&
        Objects.equals(this.resultCount, get2ListsIdFollowersResponseMeta.resultCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nextToken, previousToken, resultCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Get2ListsIdFollowersResponseMeta {\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    previousToken: ").append(toIndentedString(previousToken)).append("\n");
    sb.append("    resultCount: ").append(toIndentedString(resultCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("next_token");
    openapiFields.add("previous_token");
    openapiFields.add("result_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Get2ListsIdFollowersResponseMeta
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
     // if (jsonObj == null) {
     //   if (Get2ListsIdFollowersResponseMeta.openapiRequiredFields.isEmpty()) {
     //     return;
     //   } else { // has required fields
     //     throw new IllegalArgumentException(String.format("The required field(s) %s in Get2ListsIdFollowersResponseMeta is not found in the empty JSON string", Get2ListsIdFollowersResponseMeta.openapiRequiredFields.toString()));
     //   }
     // }

      if (jsonObj.get("next_token") != null && !jsonObj.get("next_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_token").toString()));
      }
      if (jsonObj.get("previous_token") != null && !jsonObj.get("previous_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_token").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Get2ListsIdFollowersResponseMeta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Get2ListsIdFollowersResponseMeta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Get2ListsIdFollowersResponseMeta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Get2ListsIdFollowersResponseMeta.class));

       return (TypeAdapter<T>) new TypeAdapter<Get2ListsIdFollowersResponseMeta>() {
           @Override
           public void write(JsonWriter out, Get2ListsIdFollowersResponseMeta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Get2ListsIdFollowersResponseMeta read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Get2ListsIdFollowersResponseMeta given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Get2ListsIdFollowersResponseMeta
  * @throws IOException if the JSON string is invalid with respect to Get2ListsIdFollowersResponseMeta
  */
  public static Get2ListsIdFollowersResponseMeta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Get2ListsIdFollowersResponseMeta.class);
  }

 /**
  * Convert an instance of Get2ListsIdFollowersResponseMeta to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

